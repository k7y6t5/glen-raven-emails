/**
 * Layout
 *
 * a min-width property is needed to fix Android's handling of empty <td>s
 */
.width-main {
  width: $width-full-px; // edge to edge, expressed in px to center email on wide screens
  min-width: $width-full-px;

  @media (max-width: $width-full-px) {
    width: 96% !important;
    min-width: 96% !important;
  }
}

.width-full {
  width: $width-full; // edge to edge
  min-width: $width-full;
}

.width-gutter {
  width: $width-gutter; // 1 gutter
  min-width: $width-gutter;

  @media (max-width: $width-full-px) {
    width: ($width-gutter * 0.5) !important;
    min-width: ($width-gutter * 0.5) !important;
  }
}

.width-core {
  width: $width-core; // .width-full - (.width-gutter * 2)
  min-width: $width-core;

  @media (max-width: $width-full-px) {
    width: ($width-full - $width-gutter) !important; // since gutters are cut in half
    min-width: ($width-full - $width-gutter) !important; // since gutters are cut in half
  }
}

.block {
  display: block;
}

.valign-middle {
  vertical-align: middle;
}

// Spacing
.space-above {
  margin-top: 20px !important;
  padding-top: 20px !important;
}
.space-above-small {
  margin-top: 10px !important;
  padding-top: 10px !important;
}
.snug-bottom {
  margin-bottom: 0 !important;
  padding-bottom: 0 !important;
}
.push-bottom {
  padding-bottom: 10px !important;
}

//Need to select children tds as this won't affect trs
.space-under > td {
  margin-bottom: 20px !important;
  padding-bottom: 20px !important;
}
.space-under-med > td {
  margin-bottom: 10px !important;
  padding-bottom: 10px !important;
}
.space-under-small > td {
    margin-bottom: 5px !important;
    padding-bottom: 0px !important;
  }
